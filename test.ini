/*

NOTE: AS OF MilkDrop v1.04, the functionality of the 'burn' variable 
has changed.  See below.

NOTES/TIPS
-sprites range from 00-99
-'img=' line is mandatory.  File types currently supported (as of v1.04):
JPG
PNG
BMP
TGA
DDS
PPM
DIB
-valid filenames are:
relative:  img=billy.jpg    (loads winamp\plugins\milkdrop2\billy.jpg)
img=..\billy.jpg (loads winamp\plugins\billy.jpg)
img=images\billy.jpg  (loads winamp\plugins\milkdrop2\images\billy.jpg)
absolute:  img=c:\blah\billy.jpg
NOT ok:  img=c:billy.jpg   -must specify path
NOT ok:  img=\billy.jpg    -must specify drive
-textures can be as large as 2048x2048 and do not have to be square.
-texture dims in memory will be next power of 2 higher for w, h.
ex: 500x60 texture will be stored in memory as a 512x64 texture.
-big textures can take up a lot of video memory and seriously
drop the frame rate; recommend sprites be no larger than 512x512.
256x256 is even more preferable.
-if there isn't enough video memory for the texture, it will downsample
the texture (to as low as 16x16 pixels) trying to fit it into video
memory.
-IMPORTANT: to terminate a sprite from within its own code, set the
'done' variable to a nonzero value (such as 1).  For example,
"done=above(frame,500);" would make the sprite auto-self-terminate
after 500 frames.  To make this framerate-independent, based it on
'time' or 'frame/fps' (they are equivalent).
-there is currently a maximum of 16 sprites that can be on the screen
at one time.
-the sprite manager supports instancing, so if you load two sprites
that access the same image on disk, only one texture will exist
in video memory.
-the sprite manager frees textures immediately when all the sprites
using that texture (all instances) expire or finish.
-all of the mathematical functions available for milkdrop's per-frame
and per-pixel equations are available here for doing funky things
with the sprites; see milkdrop_preset_authoring.html for a complete
list of all the functions available.
-you can define your own variables in the init_ code just by setting
them to some value (like in the per-frame or per-pixel code of a
milkdrop preset).  You can then access this value later in the
per-frame (regular) sprite code.  If you change its value, the
change will be remembered from frame to frame.  Also, if you
change the value of a built-in (read/write) variable, this change
will also be remembered from frame to frame.


READ-ONLY VARIABLES
-------------------
time
the amount of time that has elapsed since the sprite
was launched (in seconds).
frame
the # of frames that have elapsed since the sprite
was launched.
fps
the current fps (frames-per-second) the MilkDrop is running at.
progress
the progress (0=start .. 1=end) through the current MilkDrop preset.
bass, mid, treb
the relative amount of each audio band being heard this frame.
1 is normal; a number less than one (say, 0.5 .. 1) means
the band is quiet; and a number greater than one (say, 1..2)
means the band is loud.
bass_att, mid_att, treb_att
the same, but attenuated to be relative to the average band levels
over a longer period of time (i.e. more heavily attenuated/damped).

READ/WRITE VARIABLES
--------------------
x,y
the x and y position of the sprite's center on the screen.
x is 0 at the left, 1 at the right; y is 0 at the top, 1 at the bottom.
r,g,b
the red, green, and blue color brightness of the sprite.  0..1.
a
the opacity (alpha) of the sprite.  0=transparent, 1=opaque.
note that the effect of this variable depends on the blendmode
(see below), and that sometimes, due to the blendmode, the value
of 'a' has no effect.
sx, sy
the size (stretching) of the sprite, in the X and Y directions.
if these are both 1, then the image will be scaled up just large
enough so that no part of it goes off the screen.  If these are
both 0.5, the image will be half that size; 2, and it's doubled.
If sx and sy are not equal, the image will be stretched
appropriately.
rot
the angle of rotation, in radians, of the sprite.  The unit circle
goes from 0 to PI*2 (6.28) radians.  At zero radians there is no
rotation; PI/2 is like a 90-degree counter-clockwise rotation;
PI, 180 degrees; PI*3/2, 270 degrees; and PI*2 radians (the same
as zero radians): 0 degrees.
blendmode
determines the manner in which the sprite image is blended onto
the screen.
0=blend: the image is multiplied by (r,g,b) and then blended,
where 'a' decides the amount to blend.
1=decal: the image is multiplied by (r*a,g*a,b*a) and then pasted
onto the background, with no transparency.  'a' values
below 1 will modulate the color of the sprite, making
it darker.
2=additive: the image is multipled by (r*a,g*a,b*a) and then added
onto the background, making it brighter.  Again, 'a' values
below 1 will make the sprite darker.
3=srccolor: the amount to blend each pixel with the background
is equal to the inverse of the pixel's color.  White texels
in the sprite will be fully drawn, while black texels will
be transparent; in-between texels will be blended partially
based on their brightness.  Requires hardware support.
The alpha value ('a') has no effect when this blendmode
is set; the alpha value is taken from the R,G,B color in
the image at evert point.
4=colorkey:
pixels that match the color specified in the colorkey are
drawn transparently, and all other pixels are drawn opaquely,
much like a television bluescreen.  When using this blendmode,
a line like the following is required to be present in the
sprite:
colorkey=0x000000
where the value is some 24-bit hexadecimal color.  The first
two digits are 00 through FF hexadecimal (0-255 decimal)
and are the red value; the third and fourth digits are the
green value; and the last two digits are the blue value.
So, 0x000000 makes black the see-through color; 0xFFFFFF
makes white pixels transparent; 0x0000FF makes blue pixels
transparent; and so on.

When the blendmode is not 4, the colorkey setting will have
no effect.

When blendmode is 4, the alpha value ('a') still works, too;
it simply modulates the overall opacity of the sprite.

NOTE that this effect does not work on all video cards, and
also tends to hiccup when running in 16-bit color.  Try it
in 32-bit color for best chances for it to work.

NOTE that prior to MilkDrop v1.04, this feature worked
slightly differently; there was a range of color key values
(and you specified 'colorkey_lo' and 'colorkey_hi')
instead of just one single colorkey value ('colorkey').
My apologies for any confusion this change might cause.
flipx
if nonzero, the sprite will be flipped horizontally.
flipy
if nonzero, the sprite will be flipped vertically.
repeatx
the number of times to repeat the texture over the surface of the
sprite, in the x direction.  A value of 1 is the default; a value of
2 will cause the texture to tile twice in the x direction; and so on.

**NOTE that if the width or height of the source image is not a
power of two (16,32,64,128,256,512,1024,2048) then repeating the
image could cause strange bands to appear (on some poorly-written
display drivers or older video cards).  If using repeating, pre-
stretch the source image to be a power of 2 to alleviate this
problem.**
repeaty
like repeatx, but in the y-direction.
done
set this to some nonzero value to make the sprite self-terminate.
frees up resources associated with the sprite.
burn
if set to a nonzero value, then the sprite will burn into MilkDrop's
background and become part of the animation.  If set to zero, there
will be no burn-in.  You can set this to 1 for a long time to make
cool trails of the sprite, or you can set it to 1 just on the last frame
(at the same time that you set 'done' to 1), to make the sprite burn into
the background and die off, much like song titles and custom messages do.
( NOTE: prior to v1.04, 'burn' only worked on the last frame, when done
was set to 1.  With v1.04 and later, 'burn' works on any frame. )


MOTION
i/I - zoom in/out
[ / ] - push motion to the left/right (dx)
{ / } - push motion up/down (dy)
< / > - rotate left/right (rot)
o/O - shrink/grow the amplitude of the warp effect

WAVEFORM
W   - cycle through waveforms
j/J - scale waveform down/up
e/E - make the waveform more transparent/more solid

BRIGHTNESS **
g/G - decrease, increase gamma (brightness) **

VIDEO ECHO effect **
q/Q - scale 2nd graphics layer down/up **
F - flip 2nd graphics layer (cycles through 4 fixed orientations) **
/end of critical info


*/

[img00]
// testing color keying... this is probably best with TGA's (exact colors), not JPG's.
img=textures\kaite.jpg
colorkey=0xFFFFFF
init_1=blendmode = 4; 
code_1=rot = time*0.27;                           
code_2=new_scale = 0.45 + 0.1*sin(time*0.6);
code_3=sx = new_scale;                            
code_4=sy = new_scale;                            
code_5=r=0.5+sin(time*0.9);
code_6=a=0.5+sin(time*1.3);

[img01]
// this tests the 'done' function, and burns into the screen @ the end
img=textures\heart.jpg
init_1=blendmode = 3;
init_2=x = 1;
init_3=orig_y = 0.5;
code_1=time_to_reset = below(x,-0.5);
code_2=x = x*(1-time_to_reset) + time_to_reset*(1.5 + 0.01*rand(100) + 1);
code_3=orig_y = orig_y*(1-time_to_reset) + time_to_reset*(0.3 + 0.4*0.01*rand(100));
code_4=sx = sx*(1-time_to_reset) + time_to_reset*(0.25 + 0.4*0.01*rand(100));
code_5=sy = sx;
code_6=x = x - 0.008 + 0.0033*sin(time*1.371);
code_7=y = orig_y + 0.12*sin(time*1.9);
code_8=done=above(frame,80);
code_9=burn=done;     // burn into screen @ end

[img02]
// this burns into the screen *every frame*
img=textures\cells.jpg
init_1=blendmode = 3;
init_2=x = 1;
init_3=orig_y = 0.5;
code_1=time_to_reset = below(x,-0.5);
code_2=x = x*(1-time_to_reset) + time_to_reset*(1.5 + 0.01*rand(100) + 1);
code_3=orig_y = orig_y*(1-time_to_reset) + time_to_reset*(0.3 + 0.4*0.01*rand(100));
code_4=sx = sx*(1-time_to_reset) + time_to_reset*(0.25 + 0.4*0.01*rand(100));
code_5=sy = sx;
code_6=x = x - 0.008 + 0.0033*sin(time*1.371);
code_7=y = orig_y + 0.12*sin(time*1.9);
code_8=done=above(frame,80);
code_9=burn=1;      // burn into screen every frame

[img03]
// for testing: show a large (nova2) or large+skinny (nova3) texture
img=textures\smalltiled_lizard_scales.jpg
init_1=blendmode = 2;
code_1=rot = time*0.27;                           
code_2=new_scale = 1.0 + 0.1*sin(time*0.6);      
code_3=sx = new_scale;                            
code_4=sy = new_scale;                            
code_5=new_alpha = min(0.9,max(0.2,  2*max(bass-.05,bass_att)-1.1  ));
code_6=a = a*0.83 + 0.17*new_alpha;

[img04]
desc="cool: an 'osapien' drifts across the screen every so often."
img=textures\smalltiled_electric_nebula.jpg
init_1=blendmode = 3;
init_2=x = -100;
init_3=orig_y = 0.5;
code_1=time_to_reset = below(x,-0.5);
code_2=x = x*(1-time_to_reset) + time_to_reset*(1.5 + 0.01*rand(100) + 3);
code_3=orig_y = orig_y*(1-time_to_reset) + time_to_reset*(0.3 + 0.4*0.01*rand(100));
code_4=sx = sx*(1-time_to_reset) + time_to_reset*(0.25 + 0.4*0.01*rand(100));
code_5=sy = sx;
code_6=x = x - 0.008 + 0.0033*sin(time*1.371);
code_7=y = orig_y + 0.12*sin(time*1.9);

[img20]
img=textures\manyfish.jpg
init_1=blendmode = 3;
code_1=rot = time*0.27;                           
code_2=new_scale = 0.9 + 0.2*sin(time*0.6);      
code_3=sx = new_scale;                            
code_4=sy = new_scale;                            
code_5=new_alpha = min(0.9,max(0.2,  2*max(bass-.05,bass_att)-1.1  ));
code_6=a = 1;//a*0.9 + 0.1*new_alpha;

/* ezer images */

[img10]
img=D:\MakingMusic\Automatic Music Machine\Images\text0.png
init_1=blendmode = 3;
init_2=x = 0.5;
init_3=y = 0.5;
init_4=rot = time*0.27;
init_5=sx=0.3;
init_6=sy=0.3;
code_1=sound = max(max(bass_att*0.9,mid_att*0.75),treb_att*0.65)*(bass_att*0.5+mid_att*0.25+treb_att*0.25)+0.1;
code_2=rot = time*0.6;
code_3=new_scale = sx + above(sound,1)*0.0015*sin(min(1,sound)) -below(sound,1)* 0.003*cos(min(1,sound));
code_4=sx = max(0.035,min(0.6,new_scale));
code_5=sy = max(0.035,min(0.6 ,new_scale));
code_6=new_alpha = .2*min(1,max(0.5,  sound  ));
code_7=a = 0.0*sx;
code_8=x = 0.5+sin(xtime)*0.01;
code_9=y = y- (1-sx)*( above(y,0.49)*0.0031*sin(min(1,sound)) -below(y,0.51)* 0.0033*cos(min(1,sound)))*cos(1-time);
code_10=burn=0.5;

[img11]
img=D:\MakingMusic\Automatic Music Machine\Images\text1.png
init_1=blendmode = 4;
init_2=x = -100;
init_3=orig_y = 0.5;
code_1=time_to_reset = below(x,-0.5);
code_2=x = x*(1-time_to_reset) + time_to_reset*(1.5 + 0.01*rand(100) + 3);
code_3=orig_y = orig_y*(1-time_to_reset) + time_to_reset*(0.3 + 0.4*0.01*rand(100));
code_4=sx = sx*(1-time_to_reset) + time_to_reset*(0.25 + 0.24*0.01*rand(100));
code_5=sy = sx;
code_6=x =  0.5+sin(xtime)*0.01;
code_7=y = orig_y + 0.12*sin(time);

[img12]
img=D:\MakingMusic\Automatic Music Machine\Images\text2.png
init_1=blendmode = 3;
init_2=x = -100;
init_3=orig_y = 0.5;
code_1=time_to_reset = below(x,-0.5);
code_2=x = x*(1-time_to_reset) + time_to_reset*(1.5 + 0.01*rand(100) + 3);
code_3=orig_y = orig_y*(1-time_to_reset) + time_to_reset*(0.3 + 0.4*0.01*rand(100));
code_4=sx = sx*(1-time_to_reset) + time_to_reset*(0.25 + 0.24*0.01*rand(100));
code_5=sy = sx;
code_6=x =  0.55+sin(xtime)*0.01;
code_7=y = orig_y + 0.12*sin(time);

[img13]
img=D:\MakingMusic\Automatic Music Machine\Images\text3.png
init_1=blendmode = 4;
init_2=x = -100;
init_3=orig_y = 0.5;
code_1=time_to_reset = below(x,-0.5);
code_2=x = x*(1-time_to_reset) + time_to_reset*(1.5 + 0.01*rand(100) + 3);
code_3=orig_y = orig_y*(1-time_to_reset) + time_to_reset*(0.3 + 0.4*0.01*rand(100));
code_4=sx = sx*(1-time_to_reset) + time_to_reset*(0.25 + 0.24*0.01*rand(100));
code_5=sy = sx;
code_6=x =  0.5+sin(xtime)*0.01;
code_7=y = orig_y + 0.12*sin(time);

[img14]
img=D:\MakingMusic\Automatic Music Machine\Images\text4.png
init_1=blendmode = 3;
init_2=x = -10;
init_3=orig_y = 0.5;
code_1=time_to_reset = below(x,-0.5);
code_2=x = x*(1-time_to_reset) + time_to_reset*(1.5 + 0.01*rand(100) + 3);
code_3=orig_y = orig_y*(1-time_to_reset) + time_to_reset*(0.3 + 0.4*0.01*rand(100));
code_4=sx = sx*(1-time_to_reset) + time_to_reset*(0.25 + 0.24*0.01*rand(100));
code_5=sy = sx;
code_6=x =  0.5+sin(xtime)*0.01;
code_7=y = orig_y + 0.12*sin(time);


[img15]
img=D:\MakingMusic\Automatic Music Machine\Images\text5.png
init_1=blendmode = 4;
init_2=x = -10;
init_3=orig_y = 0.5;
code_1=time_to_reset = below(x,-0.5);
code_2=x = x*(1-time_to_reset) + time_to_reset*(1.5 + 0.01*rand(100) + 3);
code_3=orig_y = orig_y*(1-time_to_reset) + time_to_reset*(0.3 + 0.4*0.01*rand(100));
code_4=sx = sx*(1-time_to_reset) + time_to_reset*(0.25 + 0.24*0.01*rand(100));
code_5=sy = sx;
code_6=x =  0.5+sin(xtime)*0.01;
code_7=y = orig_y + 0.12*sin(time);


[img16]
img=D:\MakingMusic\Automatic Music Machine\Images\text6.png
init_1=blendmode = 3;
init_2=x = -10;
init_3=orig_y = 0.5;
code_1=time_to_reset = below(x,-0.5);
code_2=x = x*(1-time_to_reset) + time_to_reset*(1.5 + 0.01*rand(100) + 3);
code_3=orig_y = orig_y*(1-time_to_reset) + time_to_reset*(0.3 + 0.4*0.01*rand(100));
code_4=sx = sx*(1-time_to_reset) + time_to_reset*(0.25 + 0.24*0.01*rand(100));
code_5=sy = sx;
code_6=x =  0.5+sin(xtime)*0.01;
code_7=y = orig_y + 0.12*sin(time);


[img17]
img=D:\MakingMusic\Automatic Music Machine\Images\text7.png
init_1=blendmode = 3;
init_2=x = -10;
init_3=orig_y = 0.5;
code_1=time_to_reset = below(x,-0.5);
code_2=x = x*(1-time_to_reset) + time_to_reset*(1.5 + 0.01*rand(100) + 3);
code_3=orig_y = orig_y*(1-time_to_reset) + time_to_reset*(0.3 + 0.4*0.01*rand(100));
code_4=sx = sx*(1-time_to_reset) + time_to_reset*(0.25 + 0.24*0.01*rand(100));
code_5=sy = sx;
code_6=x =  0.5+sin(xtime)*0.01;
code_7=y = orig_y + 0.12*sin(time);


[img18]
img=D:\MakingMusic\Automatic Music Machine\Images\text8.png
init_1=blendmode = 4;
init_2=x = -10;
init_3=orig_y = 0.5;
code_1=time_to_reset = below(x,-0.5);
code_2=x = x*(1-time_to_reset) + time_to_reset*(1.5 + 0.01*rand(100) + 3);
code_3=orig_y = orig_y*(1-time_to_reset) + time_to_reset*(0.3 + 0.4*0.01*rand(100));
code_4=sx = sx*(1-time_to_reset) + time_to_reset*(0.25 + 0.24*0.01*rand(100));
code_5=sy = sx;
code_6=x =  0.5+sin(xtime)*0.01;
code_7=y = orig_y + 0.12*sin(time);


[img19]
img=D:\MakingMusic\Automatic Music Machine\Images\text9.png
init_1=blendmode = 3;
init_2=x = -10;
init_3=orig_y = 0.5;
code_1=time_to_reset = below(x,-0.5);
code_2=x = x*(1-time_to_reset) + time_to_reset*(1.5 + 0.01*rand(100) + 3);
code_3=orig_y = orig_y*(1-time_to_reset) + time_to_reset*(0.3 + 0.4*0.01*rand(100));
code_4=sx = sx*(1-time_to_reset) + time_to_reset*(0.25 + 0.24*0.01*rand(100));
code_5=sy = sx;
code_6=x =  0.5+sin(xtime)*0.01;
code_7=y = orig_y + 0.12*sin(time);


[img21]
img=D:\MakingMusic\Automatic Music Machine\Images\1.png
init_1=blendmode = 4;
code_1=rot = 0;
code_2=new_scale = 0.1 + 0.1*sin(time*0.6);      
code_3=sx = new_scale;                            
code_4=sy = new_scale;                            
code_5=new_alpha = .4*min(0.9,max(0.2,  2*max(treb-.05,treb_att)-1.1  ));
code_6=a = 1;//a*0.03 + 0.10*new_alpha;

[img22]
img=D:\MakingMusic\Automatic Music Machine\Images\2.png
init_1=blendmode = 3;
init_2=sx=0.5;
init_3=sy=0.5;
code_1=sound = max(max(bass_att*0.9,mid_att*0.75),treb_att*0.65)*(bass_att*0.5+mid_att*0.25+treb_att*0.25)+0.1;
code_2=rot = 0;
code_3=new_scale = sx + above(sound,1)*0.0015*sin(min(1,sound)) -below(sound,1)* 0.003*cos(min(1,sound));      
code_4=sx = max(0.035,min(0.9,new_scale));                            
code_5=sy = max(0.035,min(0.9 ,new_scale));                        
code_6=new_alpha = .2*min(1,max(0.5,  sound  ));
code_7=a = 0.0*sx;
code_8=x = 0.5+sin(time)*0.01;      
code_9=y = y- (1-sx)*( above(y,0.49)*0.0031*sin(min(1,sound)) -below(y,0.51)* 0.0033*cos(min(1,sound)))*cos(1-time);   
code_10=burn=0.5;

[img23]
img=D:\MakingMusic\Automatic Music Machine\Images\3.png
init_1=blendmode = 3;
code_1=rot = 0;
code_2=new_scale =  0.181*sin(time*7.3/2);      
code_3=sx = new_scale;                            
code_4=sy = new_scale;                            
code_5=new_alpha = .1*min(1,max(0.2,  2*max(bass-.5,bass_att)-1.1  ));
code_6=a = new_alpha;

[img24]
img=D:\MakingMusic\Automatic Music Machine\Images\4.png
init_1=blendmode = 4;
code_1=rot = time*(0.9+0.1*sin(bass_att-1));                           
code_2=new_scale =  0.014*sin(time*7.3/2)+sin(bass_att-1)*0.05+0.05*sin(mid_att-1);      
code_3=sx = new_scale;                            
code_4=sy = new_scale;                            
code_5=new_alpha = .1*min(1,max(0.2,  2*max(bass-.05,bass_att)-1.1  ));
code_6=a = new_alpha;


[img25]
img=D:\MakingMusic\Automatic Music Machine\Images\5.png
init_1=blendmode = 3;
code_1=rot = above(frame,10)*time*7.3/2/16;  ;                           
code_2=new_scale = 0.05 + abs(0.07*sin(time*7.3/2/4));      
code_3=sx = new_scale;                            
code_4=sy = new_scale;                            
code_5=new_alpha = .1*min(1,max(0.2,  2*max(bass-.05,bass_att)-1.1  ));
code_6=a = 0.01;

[img26]
img=D:\MakingMusic\Automatic Music Machine\Images\6.png
init_1=blendmode = 4;
code_1=rot = time*7.3/2/16;                           
code_2=new_scale =  0.13;      
code_3=sx = new_scale;                            
code_4=sy = new_scale;                            
code_5=a = 1;//above(bass_att,3.1)*0.81 + below(bass_att,2.5)*(max(.1,a-0.021));
code_6=x = 0.5 +  sin(rot)*0.251 +below(x,-.2)-above(x,1.2)   ;      
code_7=y = y   + above(frame,480) * cos(rot)*0.00251 +below(y,-.2)-above(y,1.2)   ;     

[img27]
img=D:\MakingMusic\Automatic Music Machine\Images\7.png
init_1=blendmode = 2;
code_1=rot = 0;
code_2=new_scale =  0.2;      
code_3=sx = new_scale;                            
code_4=sy = new_scale;                            
code_5=a = min(1,above(mid_att,2.5)*1 + below(mid_att,2.5)*(max(.1,a-0.081)))*sin(time*0.3);


[img28]
img=D:\MakingMusic\Automatic Music Machine\Images\8.png
init_1=blendmode = 2;
code_1=rot = time*0.4;                           
code_2=new_scale =  0.1;      
code_3=sx = new_scale;                            
code_4=sy = new_scale;                            
code_5=a = above(treb_att,2.5)*1 + below(treb_att,2.5)*(max(.1,a-0.041));


[img29]
img=D:\MakingMusic\Automatic Music Machine\Images\9.png
init_1=blendmode = 4;
init_2=sx=0.223;
init_3=x=0.5;
init_4=y=0.5;
code_1=sound = max(max(bass_att*0.9,mid_att*0.75),treb_att*0.65)*(bass_att*0.5+mid_att*0.25+treb_att*0.25)-0.13;
code_2=rot = time*0.6;                           
code_3=new_scale = sx + above(sound,1)*0.0016*sin(min(1,sound)) -below(sound,1)* 0.0014*cos(min(1,sound));      
code_4=sx = max(0.035,min(0.9,new_scale));                            
code_5=sy = max(0.035,min(0.9 ,new_scale));                        
code_6=new_alpha = .2*min(1,max(0.5,  sound  ));
code_7=a = 0.33;
code_8=x = x + sin(rot)*0.0051 +below(x,-.2)-above(x,1.2)   ;      
code_9=y = y + cos(rot)*0.0051 +below(y,-.2)-above(y,1.2)   ;     
code_10=burn=1;


[img30]
img=D:\MakingMusic\Automatic Music Machine\Images\10.png
init_1=blendmode = 4;
init_2=sx=0.23;
code_1=sound = max(max(bass_att*0.9,mid_att*0.75),treb_att*0.65)*(bass_att*0.5+mid_att*0.25+treb_att*0.25)-0.13;
code_2=rot = time*0.6;                           
code_3=new_scale = sx + above(sound,1)*0.0016*sin(min(1,sound)) -below(sound,1)* 0.0014*cos(min(1,sound));      
code_4=sx = max(0.035,min(0.9,new_scale));                            
code_5=sy = max(0.035,min(0.9 ,new_scale));                        
code_6=new_alpha = .2*min(1,max(0.5,  sound  ));
code_7=a = new_alpha;
code_8=x = 0.5+sin(time*7.3/2)*0.01;      
code_9=y = 0.5 + cos(time*7.3/2)*0.01;   
code_10=burn=0.5;


[img31]
img=D:\MakingMusic\Automatic Music Machine\Images\11.png
init_1=blendmode = 4;
init_2=sx=0.223;
init_3=x=0.5;
init_4=y=0.5;
code_1=sound = max(max(bass_att*0.9,mid_att*0.75),treb_att*0.65)*(bass_att*0.5+mid_att*0.25+treb_att*0.25)-0.13;
code_2=rot = time*0.6;                           
code_3=new_scale = sx - above(sound,1)*0.0016*sin(min(1,sound)) +below(sound,1)* 0.0014*cos(min(1,sound));      
code_4=sx = max(0.035,min(0.9,new_scale));                            
code_5=sy = max(0.035,min(0.9 ,new_scale));                        
code_6=new_alpha = .2*min(1,max(0.5,  sound  ));
code_7=a = 0.33;
code_8=x = x - sin(rot)*0.0051 +below(x,-.2)-above(x,1.2)   ;      
code_9=y = y + cos(rot)*0.0051 +below(y,-.2)-above(y,1.2)   ;     
code_10=burn=1;


[img32]
img=D:\MakingMusic\Automatic Music Machine\Images\12.png
init_1=blendmode = 4;
init_2=sx=0.5;
init_3=x=0.5;
init_4=y=0.5;
code_1=sound = max(max(bass_att*0.9,mid_att*0.75),treb_att*0.65)*(bass_att*0.5+mid_att*0.25+treb_att*0.25)-0.13;
code_2=rot = 0;                           
code_3=new_scale = 1;      
code_4=sx = 1;                            
code_5=sy = .7;                        
code_6=new_alpha = .056*min(1,max(0.5,  sound  ));
code_7=a =new_alpha*above(new_alpha,0.05);;
code_8=x = 0.5 ;      
code_9=y =0.5 ;     
code_10=burn=above(new_alpha,0.05);


[img33]
img=D:\MakingMusic\Automatic Music Machine\Images\13.png
init_1=blendmode = 4;
init_2=sx=0.5;
init_3=x=0.5;
init_4=y=0.5;
code_1=sound = max(max(bass_att*0.9,mid_att*0.75),treb_att*0.65)*(bass_att*0.5+mid_att*0.25+treb_att*0.25)-0.13;
code_2=rot = 0;
code_3=new_scale = 1;
code_4=sx = 1;
code_5=sy = .7;
code_6=new_alpha = .056*min(1,max(0.5,  sound  ));
code_7=a =new_alpha*above(new_alpha,0.05);;
code_8=x = 0.5 ;
code_9=y =0.5 ;
code_10=burn=above(new_alpha,0.05);


[img34]
img=D:\MakingMusic\Automatic Music Machine\Images\14.png
init_1=blendmode = 4;
init_2=sx=0.5;
init_3=x=0.5;
init_4=y=0.5;
code_1=sound = max(max(bass_att*0.9,mid_att*0.75),treb_att*0.65)*(bass_att*0.5+mid_att*0.25+treb_att*0.25)-0.13;
code_2=rot = 0;
code_3=new_scale = 1;
code_4=sx = 1;
code_5=sy = .7;
code_6=new_alpha = .056*min(1,max(0.5,  sound  ));
code_7=a =new_alpha*above(new_alpha,0.05);;
code_8=x = 0.5 ;
code_9=y =0.5 ;
code_10=burn=above(new_alpha,0.05);


[img35]
img=D:\MakingMusic\Automatic Music Machine\Images\15.png
init_1=blendmode = 4;
init_2=sx=0.5;
init_3=x=0.5;
init_4=y=0.5;
code_1=sound = max(max(bass_att*0.9,mid_att*0.75),treb_att*0.65)*(bass_att*0.5+mid_att*0.25+treb_att*0.25)-0.13;
code_2=rot = 0;
code_3=new_scale = 1;
code_4=sx = 1;
code_5=sy = .7;
code_6=new_alpha = .056*min(1,max(0.5,  sound  ));
code_7=a =new_alpha*above(new_alpha,0.05);;
code_8=x = 0.5 ;
code_9=y =0.5 ;
code_10=burn=above(new_alpha,0.05);


[img36]
img=D:\MakingMusic\Automatic Music Machine\Images\16.png
init_1=blendmode = 4;
init_2=sx=0.5;
init_3=x=0.5;
init_4=y=0.5;
code_1=sound = max(max(bass_att*0.9,mid_att*0.75),treb_att*0.65)*(bass_att*0.5+mid_att*0.25+treb_att*0.25)-0.13;
code_2=rot = 0;
code_3=new_scale = 1;
code_4=sx = 1;
code_5=sy = .7;
code_6=new_alpha = .056*min(1,max(0.5,  sound  ));
code_7=a =new_alpha*above(new_alpha,0.05);;
code_8=x = 0.5 ;
code_9=y =0.5 ;
code_10=burn=above(new_alpha,0.05);


[img37]
img=D:\MakingMusic\Automatic Music Machine\Images\17.png
init_1=blendmode = 4;
init_2=sx=0.5;
init_3=x=0.5;
init_4=y=0.5;
code_1=sound = max(max(bass_att*0.9,mid_att*0.75),treb_att*0.65)*(bass_att*0.5+mid_att*0.25+treb_att*0.25)-0.13;
code_2=rot = 0;
code_3=new_scale = 1;
code_4=sx = 1;
code_5=sy = .7;
code_6=new_alpha = .056*min(1,max(0.5,  sound  ));
code_7=a =new_alpha*above(new_alpha,0.05);;
code_8=x = 0.5 ;
code_9=y =0.5 ;
code_10=burn=above(new_alpha,0.05);


[img38]
img=D:\MakingMusic\Automatic Music Machine\Images\18.png
init_1=blendmode = 4;
init_2=sx=0.5;
init_3=x=0.5;
init_4=y=0.5;
code_1=sound = max(max(bass_att*0.9,mid_att*0.75),treb_att*0.65)*(bass_att*0.5+mid_att*0.25+treb_att*0.25)-0.13;
code_2=rot = 0;
code_3=new_scale = 1;
code_4=sx = 1;
code_5=sy = .7;
code_6=new_alpha = .056*min(1,max(0.5,  sound  ));
code_7=a =new_alpha*above(new_alpha,0.05);;
code_8=x = 0.5 ;
code_9=y =0.5 ;
code_10=burn=above(new_alpha,0.05);


[img39]
img=D:\MakingMusic\Automatic Music Machine\Images\19.png
init_1=blendmode = 4;
init_2=sx=0.5;
init_3=x=0.5;
init_4=y=0.5;
code_1=sound = max(max(bass_att*0.9,mid_att*0.75),treb_att*0.65)*(bass_att*0.5+mid_att*0.25+treb_att*0.25)-0.13;
code_2=rot = 0;
code_3=new_scale = 1;
code_4=sx = 1;
code_5=sy = .7;
code_6=new_alpha = .056*min(1,max(0.5,  sound  ));
code_7=a =new_alpha*above(new_alpha,0.05);;
code_8=x = 0.5 ;
code_9=y =0.5 ;
code_10=burn=above(new_alpha,0.05);



[img40]
img=D:\MakingMusic\Automatic Music Machine\Images\background0.png
init_1=blendmode = 4;
init_2=sx=0.5;
init_3=x=0.5;
init_4=y=0.5;
code_1=sound = (2*treb_att*treb+mid*treb_att)/26;
code_2=rot = 0;
code_3=new_scale = 1;
code_4=sx = 1;
code_5=sy = .7;
code_6=new_alpha = 1*min(1,max(0,  sound  ));
code_7=a =new_alpha*above(new_alpha,.99)*0.15;
code_8=x = 0.5 ;
code_9=y =0.5 ;
code_10=burn=above(a,0.1);

[img41]
img=D:\MakingMusic\Automatic Music Machine\Images\background1.png
init_1=blendmode = 4;
init_2=sx=0.5;
init_3=x=0.5;
init_4=y=0.5;
code_1=sound = (2*treb_att*treb+mid*treb_att)/26;
code_2=rot = 0;                           
code_3=new_scale = 1;      
code_4=sx = 1;                            
code_5=sy = .7;                        
code_6=new_alpha = 1*min(1,max(0,  sound  ));
code_7=a =new_alpha*above(new_alpha,.99)*0.15;
code_8=x = 0.5 ;      
code_9=y =0.5 ;     
code_10=burn=above(a,0.1);


[img50]
img=D:\MakingMusic\Winamp\Plugins\Milkdrop2\images\ezer0.jpg
init_1=blendmode = 0;
code_1=rot = time*0.4;
code_2=new_scale =  0.1;
code_3=sx = new_scale;
code_4=sy = new_scale;
code_5=a = above(treb_att,2.5)*1 + below(treb_att,2.5)*(max(.1,a-0.041));
code_6=done=above(frame,30);
code_7=burn=done;     // burn into screen @ end

[img51]
img=D:\MakingMusic\Winamp\Plugins\Milkdrop2\images\ezer1.jpg
init_1=blendmode = 0;
init_2=x = 0.5;
init_3=orig_y = 0.5;
code_1=time_to_reset = below(x,-500);
code_2=x = 0.5;
code_3=orig_y = 0.485;
code_4=sx = frame/80*0.4;
code_5=sy = sx;
code_6=x = x - 0.008 + 0.0033*sin(time*7.3/2);
code_7=y = orig_y + 0.05*sin(time*0.5);
code_8=scale = frame/20*0.6;
code_9=a =frame/250;
code_10=done=above(frame,120);
code_11=burn=done;     // burn into screen @ end


[img52]
img=D:\MakingMusic\Winamp\Plugins\Milkdrop2\images\ezer2.jpg
init_1=blendmode = 0;
init_2=x = 0.5;
init_3=orig_y = 0.5;
code_1=time_to_reset = below(x,-500);
code_2=x = 0.5;
code_3=orig_y = 0.485;
code_4=sx = frame/80*0.4;
code_5=sy = sx;
code_6=x = x - 0.008 + 0.0033*sin(time*7.3/2);
code_7=y = orig_y + 0.05*sin(time*0.5);
code_8=scale = frame/20*0.6;
code_9=a =frame/250;
code_10=done=above(frame,120);
code_11=burn=done;     // burn into screen @ end


[img53]
img=D:\MakingMusic\Winamp\Plugins\Milkdrop2\images\ezer3.jpg
init_1=blendmode = 0;
init_2=x = 0.5;
init_3=orig_y = 0.5;
code_1=time_to_reset = below(x,-500);
code_2=x = 0.5;
code_3=orig_y = 0.485;
code_4=sx = frame/80*0.4;
code_5=sy = sx;
code_6=x = x - 0.008 + 0.0033*sin(time*7.3/2);
code_7=y = orig_y + 0.05*sin(time*0.5);
code_8=scale = frame/20*0.6;
code_9=a =frame/250;
code_10=done=above(frame,120);
code_11=burn=done;     // burn into screen @ end

[img54]
img=D:\MakingMusic\Winamp\Plugins\Milkdrop2\images\ezer4.jpg
init_1=blendmode = 0;
init_2=x = 0.5;
init_3=orig_y = 0.5;
code_1=time_to_reset = below(x,-500);
code_2=x = 0.5;
code_3=orig_y = 0.485;
code_4=sx = frame/80*0.4;
code_5=sy = sx;
code_6=x = x - 0.008 + 0.0033*sin(time*7.3/2);
code_7=y = orig_y + 0.05*sin(time*0.5);
code_8=scale = frame/20*0.6;
code_9=a =frame/250;
code_10=done=above(frame,120);
code_11=burn=done;     // burn into screen @ end

[img55]
img=D:\MakingMusic\Winamp\Plugins\Milkdrop2\images\ezer5.jpg
init_1=blendmode = 0;
init_2=x = 0.5;
init_3=orig_y = 0.5;
code_1=time_to_reset = below(x,-500);
code_2=x = 0.5;
code_3=orig_y = 0.485;
code_4=sx = frame/80*0.4;
code_5=sy = sx;
code_6=x = x - 0.008 + 0.0033*sin(time*7.3/2);
code_7=y = orig_y + 0.05*sin(time*0.5);
code_8=scale = frame/20*0.6;
code_9=a =frame/250;
code_10=done=above(frame,120);
code_11=burn=done;     // burn into screen @ end

[img56]
img=D:\MakingMusic\Winamp\Plugins\Milkdrop2\images\ezer6.jpg
init_1=blendmode = 0;
init_2=x = 0.5;
init_3=orig_y = 0.5;
code_1=time_to_reset = below(x,-500);
code_2=x = 0.5;
code_3=orig_y = 0.485;
code_4=sx = frame/80*0.4;
code_5=sy = sx;
code_6=x = x - 0.008 + 0.0033*sin(time*7.3/2);
code_7=y = orig_y + 0.05*sin(time*0.5);
code_8=scale = frame/20*0.6;
code_9=a =frame/250;
code_10=done=above(frame,120);
code_11=burn=done;     // burn into screen @ end


[img60]
img=D:\MakingMusic\Automatic Music Machine\Images\background2.png
init_1=blendmode = 0;
init_2=sx=0.5;
init_3=x=0.5;
init_4=y=0.5;
code_1=sound = (2*bass_att*bass+bass_att)/26;
code_2=rot = 0;                           
code_3=new_scale = 1;      
code_4=sx = 1;                            
code_5=sy = .7;                        
code_6=new_alpha = 1*min(1,max(0,  sound  ));
code_7=a =new_alpha*above(new_alpha,.99)*0.056;
code_8=x = 0.5 ;      
code_9=y =0.5 ;     
code_10=burn=above(a,0.035);


/*Animations*/
/*Animations*/

[img60]
img=\anim0.png

init_1=g_blendmode = 0;
init_2=x = .5;
init_3=y = .5;
init_4=sx = .5;
init_5=sy = .5;

code_1=g_Time = time/10;
code_2=g_sound = bass;
code_3=g_currentFrame = (1-sin(time))*15;
code_4=g_scale0 = 0;
code_5=g_a = 1*min(1,max(0,  g_sound ));
code_6=g_rot = 0;
code_7=g_sx = .5;
code_8=g_sy = .5;
code_9=g_a = a0;
code_10=g_x = 0.5+sin(g_Time)/5
code_11=g_y = .5;
code_12=burn = 1;

[img61]
img=D:\MakingMusic\Automatic Music Machine\Images\anim1.png

init_1=x = 0.5;
init_2=y = 0.5;
init_3=numberOfImages = 15;
init_4=blendmode = 4;
init_5=scale = 0.25;

code_1=prevAudio_1 = audio_1;
code_2=audio_1 = bass_att;
code_3=change = audio_1 - prevAudio_1;
code_4=bit_1 = above(change,0.1);
code_5=counter_1 = counter_1 + bit_1;
code_6=rot = 0;
code_7=scale = scale + bit_1*0.04*bass_att - 0.002;
code_8=scale = if(above(scale,0.3),0.3,scale);
code_9=scale = if(below(scale,0.03),0.03,scale);
code_10=sx = scale;
code_11=sy = sx;
code_12=a = equal(counter_1%numberOfImages,1);
code_13=burn = 1;

[img62]
img=D:\MakingMusic\Automatic Music Machine\Images\anim2.png

init_1=x = 0.5;
init_2=y = 0.5;
init_3=numberOfImages = 15;
init_4=blendmode = 4;
init_5=scale = 0.25;

code_1=prevAudio_2 = audio_2;
code_2=audio_2 = bass_att;
code_3=change = audio_2 - prevAudio_2;
code_4=bit_2 = above(change,0.1);
code_5=counter_2 = counter_2 + bit_2;
code_6=rot = 0;
code_7=scale = scale + bit_2*0.04*bass_att - 0.002;
code_8=scale = if(above(scale,0.3),0.3,scale);
code_9=scale = if(below(scale,0.03),0.03,scale);
code_10=sx = scale;
code_11=sy = sx;
code_12=a = equal(counter_2%numberOfImages,2);
code_13=burn = 1;

[img63]
img=D:\MakingMusic\Automatic Music Machine\Images\anim3.png

init_1=x = 0.5;
init_2=y = 0.5;
init_3=numberOfImages = 15;
init_4=blendmode = 4;
init_5=scale = 0.25;

code_1=prevAudio_3 = audio_3;
code_2=audio_3 = bass_att;
code_3=change = audio_3 - prevAudio_3;
code_4=bit_3 = above(change,0.1);
code_5=counter_3 = counter_3 + bit_3;
code_6=rot = 0;
code_7=scale = scale + bit_3*0.04*bass_att - 0.002;
code_8=scale = if(above(scale,0.3),0.3,scale);
code_9=scale = if(below(scale,0.03),0.03,scale);
code_10=sx = scale;
code_11=sy = sx;
code_12=a = equal(counter_3%numberOfImages,3);
code_13=burn = 1;

[img64]
img=D:\MakingMusic\Automatic Music Machine\Images\anim4.png

init_1=x = 0.5;
init_2=y = 0.5;
init_3=numberOfImages = 15;
init_4=blendmode = 4;
init_5=scale = 0.25;

code_1=prevAudio_4 = audio_4;
code_2=audio_4 = bass_att;
code_3=change = audio_4 - prevAudio_4;
code_4=bit_4 = above(change,0.1);
code_5=counter_4 = counter_4 + bit_4;
code_6=rot = 0;
code_7=scale = scale + bit_4*0.04*bass_att - 0.002;
code_8=scale = if(above(scale,0.3),0.3,scale);
code_9=scale = if(below(scale,0.03),0.03,scale);
code_10=sx = scale;
code_11=sy = sx;
code_12=a = equal(counter_4%numberOfImages,4);
code_13=burn = 1;

[img65]
img=D:\MakingMusic\Automatic Music Machine\Images\anim5.png

init_1=x = 0.5;
init_2=y = 0.5;
init_3=numberOfImages = 15;
init_4=blendmode = 4;
init_5=scale = 0.25;

code_1=prevAudio_5 = audio_5;
code_2=audio_5 = bass_att;
code_3=change = audio_5 - prevAudio_5;
code_4=bit_5 = above(change,0.1);
code_5=counter_5 = counter_5 + bit_5;
code_6=rot = 0;
code_7=scale = scale + bit_5*0.04*bass_att - 0.002;
code_8=scale = if(above(scale,0.3),0.3,scale);
code_9=scale = if(below(scale,0.03),0.03,scale);
code_10=sx = scale;
code_11=sy = sx;
code_12=a = equal(counter_5%numberOfImages,5);
code_13=burn = 1;

[img66]
img=D:\MakingMusic\Automatic Music Machine\Images\anim6.png

init_1=x = 0.5;
init_2=y = 0.5;
init_3=numberOfImages = 15;
init_4=blendmode = 4;
init_5=scale = 0.25;

code_1=prevAudio_6 = audio_6;
code_2=audio_6 = bass_att;
code_3=change = audio_6 - prevAudio_6;
code_4=bit_6 = above(change,0.1);
code_5=counter_6 = counter_6 + bit_6;
code_6=rot = 0;
code_7=scale = scale + bit_6*0.04*bass_att - 0.002;
code_8=scale = if(above(scale,0.3),0.3,scale);
code_9=scale = if(below(scale,0.03),0.03,scale);
code_10=sx = scale;
code_11=sy = sx;
code_12=a = equal(counter_6%numberOfImages,6);
code_13=burn = 1;

[img67]
img=D:\MakingMusic\Automatic Music Machine\Images\anim7.png

init_1=x = 0.5;
init_2=y = 0.5;
init_3=numberOfImages = 15;
init_4=blendmode = 4;
init_5=scale = 0.25;

code_1=prevAudio_7 = audio_7;
code_2=audio_7 = bass_att;
code_3=change = audio_7 - prevAudio_7;
code_4=bit_7 = above(change,0.1);
code_5=counter_7 = counter_7 + bit_7;
code_6=rot = 0;
code_7=scale = scale + bit_7*0.04*bass_att - 0.002;
code_8=scale = if(above(scale,0.3),0.3,scale);
code_9=scale = if(below(scale,0.03),0.03,scale);
code_10=sx = scale;
code_11=sy = sx;
code_12=a = equal(counter_7%numberOfImages,7);
code_13=burn = 1;

[img68]
img=D:\MakingMusic\Automatic Music Machine\Images\anim8.png

init_1=x = 0.5;
init_2=y = 0.5;
init_3=numberOfImages = 15;
init_4=blendmode = 4;
init_5=scale = 0.25;

code_1=prevAudio_8 = audio_8;
code_2=audio_8 = bass_att;
code_3=change = audio_8 - prevAudio_8;
code_4=bit_8 = above(change,0.1);
code_5=counter_8 = counter_8 + bit_8;
code_6=rot = 0;
code_7=scale = scale + bit_8*0.04*bass_att - 0.002;
code_8=scale = if(above(scale,0.3),0.3,scale);
code_9=scale = if(below(scale,0.03),0.03,scale);
code_10=sx = scale;
code_11=sy = sx;
code_12=a = equal(counter_8%numberOfImages,8);
code_13=burn = 1;

[img69]
img=D:\MakingMusic\Automatic Music Machine\Images\anim9.png

init_1=x = 0.5;
init_2=y = 0.5;
init_3=numberOfImages = 15;
init_4=blendmode = 4;
init_5=scale = 0.25;

code_1=prevAudio_9 = audio_9;
code_2=audio_9 = bass_att;
code_3=change = audio_9 - prevAudio_9;
code_4=bit_9 = above(change,0.1);
code_5=counter_9 = counter_9 + bit_9;
code_6=rot = 0;
code_7=scale = scale + bit_9*0.04*bass_att - 0.002;
code_8=scale = if(above(scale,0.3),0.3,scale);
code_9=scale = if(below(scale,0.03),0.03,scale);
code_10=sx = scale;
code_11=sy = sx;
code_12=a = equal(counter_9%numberOfImages,9);
code_13=burn = 1;

[img70]
img=D:\MakingMusic\Automatic Music Machine\Images\anim10.png

init_1=x = 0.5;
init_2=y = 0.5;
init_3=numberOfImages = 15;
init_4=blendmode = 4;
init_5=scale = 0.25;

code_1=prevAudio_10 = audio_10;
code_2=audio_10 = bass_att;
code_3=change = audio_10 - prevAudio_10;
code_4=bit_10 = above(change,0.1);
code_5=counter_10 = counter_10 + bit_10;
code_6=rot = 0;
code_7=scale = scale + bit_10*0.04*bass_att - 0.002;
code_8=scale = if(above(scale,0.3),0.3,scale);
code_9=scale = if(below(scale,0.03),0.03,scale);
code_10=sx = scale;
code_11=sy = sx;
code_12=a = equal(counter_10%numberOfImages,10);
code_13=burn = 1;

[img71]
img=D:\MakingMusic\Automatic Music Machine\Images\anim11.png

init_1=x = 0.5;
init_2=y = 0.5;
init_3=numberOfImages = 15;
init_4=blendmode = 4;
init_5=scale = 0.25;

code_1=prevAudio_11 = audio_11;
code_2=audio_11 = bass_att;
code_3=change = audio_11 - prevAudio_11;
code_4=bit_11 = above(change,0.1);
code_5=counter_11 = counter_11 + bit_11;
code_6=rot = 0;
code_7=scale = scale + bit_11*0.04*bass_att - 0.002;
code_8=scale = if(above(scale,0.3),0.3,scale);
code_9=scale = if(below(scale,0.03),0.03,scale);
code_10=sx = scale;
code_11=sy = sx;
code_12=a = equal(counter_11%numberOfImages,11);
code_13=burn = 1;

[img72]
img=D:\MakingMusic\Automatic Music Machine\Images\anim12.png

init_1=x = 0.5;
init_2=y = 0.5;
init_3=numberOfImages = 15;
init_4=blendmode = 4;
init_5=scale = 0.25;

code_1=prevAudio_12 = audio_12;
code_2=audio_12 = bass_att;
code_3=change = audio_12 - prevAudio_12;
code_4=bit_12 = above(change,0.1);
code_5=counter_12 = counter_12 + bit_12;
code_6=rot = 0;
code_7=scale = scale + bit_12*0.04*bass_att - 0.002;
code_8=scale = if(above(scale,0.3),0.3,scale);
code_9=scale = if(below(scale,0.03),0.03,scale);
code_10=sx = scale;
code_11=sy = sx;
code_12=a = equal(counter_12%numberOfImages,12);
code_13=burn = 1;

[img73]
img=D:\MakingMusic\Automatic Music Machine\Images\anim13.png

init_1=x = 0.5;
init_2=y = 0.5;
init_3=numberOfImages = 15;
init_4=blendmode = 4;
init_5=scale = 0.25;

code_1=prevAudio_13 = audio_13;
code_2=audio_13 = bass_att;
code_3=change = audio_13 - prevAudio_13;
code_4=bit_13 = above(change,0.1);
code_5=counter_13 = counter_13 + bit_13;
code_6=rot = 0;
code_7=scale = scale + bit_13*0.04*bass_att - 0.002;
code_8=scale = if(above(scale,0.3),0.3,scale);
code_9=scale = if(below(scale,0.03),0.03,scale);
code_10=sx = scale;
code_11=sy = sx;
code_12=a = equal(counter_13%numberOfImages,13);
code_13=burn = 1;

[img74]
img=D:\MakingMusic\Automatic Music Machine\Images\anim14.png

init_1=x = 0.5;
init_2=y = 0.5;
init_3=numberOfImages = 15;
init_4=blendmode = 4;
init_5=scale = 0.25;

code_1=prevAudio_14 = audio_14;
code_2=audio_14 = bass_att;
code_3=change = audio_14 - prevAudio_14;
code_4=bit_14 = above(change,0.1);
code_5=counter_14 = counter_14 + bit_14;
code_6=rot = 0;
code_7=scale = scale + bit_14*0.04*bass_att - 0.002;
code_8=scale = if(above(scale,0.3),0.3,scale);
code_9=scale = if(below(scale,0.03),0.03,scale);
code_10=sx = scale;
code_11=sy = sx;
code_12=a = equal(counter_14%numberOfImages,14);
code_13=burn = 1;

[img75]
img=D:\MakingMusic\Automatic Music Machine\Images\anim15.png

init_1=x = 0.5;
init_2=y = 0.5;
init_3=numberOfImages = 15;
init_4=blendmode = 4;
init_5=scale = 0.25;

code_1=prevAudio_15 = audio_15;
code_2=audio_15 = bass_att;
code_3=change = audio_15 - prevAudio_15;
code_4=bit_15 = above(change,0.1);
code_5=counter_15 = counter_15 + bit_15;
code_6=rot = 0;
code_7=scale = scale + bit_15*0.04*bass_att - 0.002;
code_8=scale = if(above(scale,0.3),0.3,scale);
code_9=scale = if(below(scale,0.03),0.03,scale);
code_10=sx = scale;
code_11=sy = sx;
code_12=a = equal(counter_15%numberOfImages,15);
code_13=burn = 1;

/*
[img31]
img=D:\MakingMusic\Automatic Music Machine\Images\anim1.png
init_1=blendmode = 0;
init_2=sx=0.33;
init_3=sy=0.33;
init_4=x=0.5;
init_5=y=0.5;

code_1=sound = 1;// max(max(bass_att*0.9,mid_att*0.75),treb_att*0.65)*(bass_att*0.5+mid_att*0.25+treb_att*0.25)+0.1;
code_2=rot =0;
code_3=currentFrame1 = frame*0.04;
code_4=sx=0.33;
code_5=sy=0.33;
code_6=a = 1;//0.5*sound*above(sound,0.1)* ( equal(currentFrame1%24,1) || equal(currentFrame1%24,2) );
code_7=x=0.5;
code_8=y=0.5;
code_11=burn=a;
*/
